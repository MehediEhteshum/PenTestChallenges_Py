import nmap

scanner = nmap.PortScanner()

print("Welcome to the basic nmap automation tool")
print("<---------------------------------------------->")

# make sure input is string.
ipAddr = input("Please enter the IPv4 address (e.g. 000.255.000.255) you want to scan: ")
print(f"Your input IPv4 address: {ipAddr}")

def chooseScanType():
    # returns scan type option
    opts = (1, 2, 3) # scan options
    try:
        # only numeric input accepted 
        scanType = int(input("""\nPlease enter the type of scan (1, 2 or 3) required:
                            1. SYN ACK Scan
                            2. UDP Scan
                            3. Comprehensive Scan...\n"""))
        if scanType in opts:
            # if valid opt
            print(f"Your selection of scan: {scanType}")
            return scanType
        else:
            print("Please enter a valid option.")
            scanType = chooseScanType()
            return scanType
    except Exception as e:
        print("Please enter a valid option.")
        scanType = chooseScanType()
        return scanType

scanOpt = chooseScanType()
scanOpts = ("-v -sS", "-v -sU", "-v -sS -sV -sC -A -O")

def ipScan(opt):
    # arg: scanOpt
    # scans IP address
    try:
        scanner.scan(ipAddr, "1-1024", scanOpts[opt-1]) # (opt-1) to match scanOpts index
        print(scanner.scaninfo())
        print(f"IP status: {scanner[ipAddr].state()}")
        print(f"All protocols: {scanner[ipAddr].all_protocols()}")
        prtcl = scanner[ipAddr].all_protocols()[0]
        print(f"Ports: {scanner[ipAddr][prtcl]}")
        print(f"Nmap version: {scanner.nmap_version()}")
    except Exception as e:
        print(f"Nothing is perfect! We're having trouble!\nPlease check you IPv4 address or try again later.\nError: {e}")

ipScan(scanOpt)
